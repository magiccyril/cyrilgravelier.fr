@charset 'utf-8';

@import url('https://fonts.googleapis.com/css?family=Lato|Work+Sans');
/*@font-face {
    font-family: 'Lato';
    src: url('../fonts/lato-regular-webfont.woff2') format('woff2'),
         url('../fonts/lato-regular-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Work Sans';
    src: url('../fonts/worksans-regular-webfont.woff2') format('woff2'),
         url('../fonts/worksans-regular-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}*/

@import 'settings';
@import 'foundation';

@include foundation-global-styles;
@include foundation-typography;
@include foundation-callout;
@include foundation-label;

.container {
  @include xy-grid-container;
}

#site-header {
  margin-top: 3rem;
  text-align: center;

  header {
    @include xy-grid();
  }
  
  div {
    @include xy-cell();
  }
  
  h1 {
    border: 1px solid $dark-gray;
    border-radius: 5px;
    display: inline-block;
    letter-spacing: .5rem;
    padding: .5rem 2rem;
    text-transform: uppercase;
  }
  
  img {
    margin: 2rem 0 1rem;

    @include breakpoint(medium) {
      margin-bottom: 2rem;
    }
  }
}

#main {
  margin-bottom: 3rem;

  > div {
    @include xy-grid();
  }
  
  h2, h3, h4 {
    text-align: center;
    
    @include breakpoint(medium) {
      text-align: left;
    }
  }
    
  h3 {
    font-weight: bold;
  }
  
  .first-col {
    @include breakpoint(small only) {
      @include xy-cell(12);
    }
    
    @include breakpoint(medium) {
      @include xy-cell(
        $size: 6,
        $gutters: (
          small: 20px,
          medium: 60px
        ),
        $gutter-type: padding,
        $gutter-position: right
      );
      
      border-right: 1px solid $dark-gray;
      text-align: right;
      
      h2, h3, h4 {
        text-align: right;
      }
      h4 {
        font-style: italic;
      }
    }
  }
  .second-col {
    @include breakpoint(small only) {
      @include xy-cell(12);
    }
    
    @include breakpoint(medium) {
      @include xy-cell(
        $size: 6,
        $gutters: (
          small: 20px,
          medium: 60px
        ),
        $gutter-type: padding,
        $gutter-position: left
      );
    }
    
    h2 {
      margin-top: 3rem;
    }
    .whoAmI h2 {
      margin-top: inherit;
    }
  }
  
  h2 {
    text-transform: uppercase;
  }
}

.timeline-item {
  @include callout();
  
  > div {
    @include xy-grid();
  }
  
  p {
    margin-bottom: 0;
  }

  .timeline-item-content {
     @include breakpoint(small only) {
      @include xy-cell(12);
    }

    @include breakpoint(medium) {
      @include xy-cell(
        $size: 9,
        $gutter-type: padding,
        $gutter-position: left
      );
    }
    
    h3 {
      small {
        &:before {
          content: "(";
        }
        &:after {
          content: ")";
        }
        
        display: none;
      }
    }
  }
  .timeline-item-illustration {
    @include breakpoint(small only) {
      @include xy-cell(12);
      margin-bottom: 1rem;
    }

    @include breakpoint(medium) {
      @include xy-cell(
        $size: 3,
        $gutter-type: padding,
        $gutter-position: right
      );
    }
    
    text-align: center;
    
    p {
      font-size: .8rem;
    }
  }
}


@media print {
  html {
    font-size: 70%;
  }
  
  #site-header {
    img {
      margin: 1rem 0;
      width: 75px;
    }
  }
  
  #main {
    margin-bottom: 0;

    .first-col, .second-col {
      margin: 0;
    }
    .second-col {
      a[href]:after {
        content: none;
      }
      h2 {
        margin-top: 2rem;
      }
    }
  }
  
  .timeline-item {
    margin-bottom: 0.5rem;

    .timeline-item-illustration {
      display: none;
    }
    .timeline-item-content {
      @include xy-cell(
        $size: 12,
        $gutter-type: padding,
        $gutter-position: left
      );
      padding: 0;
      
      h3 {
        small {
          display: inline;
        }
      }
    }
  }

  .label {
    @include label;

    background: $label-background !important;
    color: $label-color !important;

    @each $name, $color in $label-palette {
      &.#{$name} {
        background: $color !important;
        color: color-pick-contrast($color, ($label-color, $label-color-alt));
        color-adjust: exact !important;
      }
    }
  }
}